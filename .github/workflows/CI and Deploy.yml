name: CI and Deploy

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']
    workflow_dispatch:

jobs:
    build:
        name: Node.js CI
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_USER: ${{ secrets.PG_USER }}
                    POSTGRES_PASSWORD: ${{ secrets.PG_PW }}
                    POSTGRES_DB: ${{ secrets.PG_DB }}
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
            - run: npm ci
            - run: npm run build --if-present
            - run: npm test
              env:
                  NODE_ENV: 'production'
                  CLIENT_TOKEN: ${{ secrets.CLIENT_TOKEN }}
                  CLIENT_ID: ${{ secrets.CLIENT_ID }}
                  KANKA_TOKEN: ${{ secrets.KANKA_TOKEN }}
                  DB_TOKEN: ${{ secrets.DB_TOKEN }}
                  DB_URL: postgres://postgres:postgres@localhost:5432/test

    deploy:
        name: Fly Deploy
        needs: build
        if: github.event_name == 'push'
        runs-on: ubuntu-latest
        concurrency: deploy-group
        steps:
            - uses: actions/checkout@v4
            - uses: superfly/flyctl-actions/setup-flyctl@master
            - run: flyctl deploy --remote-only
              env:
                  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
                  DB_URL: ${{ secrets.DB_URL}}
